# Prometheus Configuration for SCNMS
# Scrape configuration for monitoring network devices and services

global:
  scrape_interval: 60s
  evaluation_interval: 60s
  scrape_timeout: 30s
  external_labels:
    cluster: 'scnms'
    environment: 'production'

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # Configure Alertmanager if needed
          # - targets: ['alertmanager:9093']

# Rule files for alerting rules
rule_files:
  # - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # SCNMS Prometheus Exporter (Database Metrics)
  - job_name: 'scnms-exporter'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['prometheus-exporter:9100']
        labels:
          service: 'scnms_exporter'

  # SCNMS Device Discovery Service
  - job_name: 'scnms-device-discovery'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['device-discovery:8001']
        labels:
          service: 'device_discovery'
          component: 'scnms'

  # SCNMS Multi-Protocol Poller Service
  - job_name: 'scnms-poller'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['poller:8002']
        labels:
          service: 'poller'
          component: 'scnms'

  # SCNMS Data Ingestion Service
  - job_name: 'scnms-data-ingestion'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['data-ingestion:8003']
        labels:
          service: 'data_ingestion'
          component: 'scnms'

  # SCNMS Alarm Manager Service
  - job_name: 'scnms-alarm-manager'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['alarm-manager:8004']
        labels:
          service: 'alarm_manager'
          component: 'scnms'

  # SCNMS API Gateway
  - job_name: 'scnms-api'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['api:8000']
        labels:
          service: 'api_gateway'
          component: 'scnms'

  # Network Device Metrics (from Data Ingestion Service)
  # This job scrapes metrics exposed by the data ingestion service
  # which aggregates metrics from all network devices
  - job_name: 'network-devices'
    scrape_interval: 60s
    metrics_path: '/device-metrics'
    static_configs:
      - targets: ['data-ingestion:8003']
        labels:
          component: 'network_devices'

  # SNMP Exporter (if using separate SNMP exporter)
  # Uncomment and configure if using prometheus-snmp-exporter
  # - job_name: 'snmp-devices'
  #   scrape_interval: 60s
  #   metrics_path: /snmp
  #   static_configs:
  #     - targets:
  #       - 192.168.1.1  # Core Switch
  #       - 192.168.1.2  # Access Switch
  #       - 192.168.1.254  # Router
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: snmp-exporter:9116

# Note: Storage configuration is set via command-line flags in docker-compose.yml
# --storage.tsdb.path=/prometheus
# --storage.tsdb.retention.time=200h

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "http://remote-storage:8086/api/v1/prom/write"
#     queue_config:
#       capacity: 10000
#       max_shards: 5
#       min_shards: 1
#       max_samples_per_send: 5000
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms
